% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hamsteR.R
\name{source_ifnotloaded}
\alias{source_ifnotloaded}
\title{Conditional read and parse code from a file}
\usage{
source_ifnotloaded(file, force_load = FALSE, ...)
}
\arguments{
\item{file}{file name of the script file to load}

\item{force_load}{allows you to load the file even though it is marked as already loaded,
Default: FALSE}

\item{...}{these parameters will be transferred to the base::source function}
}
\description{
comparable to \code{\link[base]{source}}, \code{source_ifnotloaded} reads and parses the code
of the given file, but only if it is not already marked as 'loaded'. The loading state
has to be set by \code{\link{set_loading_state}} and could be examined by \code{\link{loading_state_of}}.
}
\details{
This is the main function of the package. source_ifnotloaded is
comparable with source of base R and it relays on it. The main differences
to base::source are
\itemize{
\item only files are allowed (no other type of connection, see \link{source})
\item  the named script will only be loaded, if a predefined
condition is fullfilled. We call this 'the script has a loading state'.
The loading state of a script can be manipulated (\code{\link{set_loading_state}}) and checked (\code{\link{loading_state_of}}).
}
}
\examples{
\dontrun{
if(interactive()){
 #EXAMPLE1
 }
}
}
